Abstraction of External Services:

Allows you to give an external service a simple, internal nickname.
The application accesses the external service using this local name, without needing to know the actual domain or IP.

Simplified DNS Resolution:

Kubernetes automatically resolves the external service's domain name to an IP address.
The application doesn’t have to manage DNS lookups directly.

Decoupling Application from External Service Details:

Keeps external service details separate from the application code.
Reduces hard-coding of IP addresses or domain names within the application.

Ease of Updates and Maintenance:

If the external service changes its IP address or domain name, only the ExternalName Service needs updating.
The application continues to function without code modifications.

Improved Flexibility and Manageability:

Centralizes the management of external service connections.
Makes it easier to update or migrate external services without affecting application stability.


Below, we have an example of .yaml file defining an ExternalName Service:

apiVersion: v1
kind: Service
metadata:
 name: db-prod
spec:
 type: ExternalName
 externalName: db-prod.example.com 
Note that an ExternalName Service does not have a selector, as it does not map to any Pods.

In this example, we’re creating an ExternalName Service called "db-prod" that maps to a database running at the domain name "db-prod.example.com". Once this Service is created, our application can simply use the Service name "db-prod" to access this database running outside the Kubernetes cluster.

The following is an explanation of the key fields:

name: This field specifies the name of the Service object, in this case, "db-prod".
type: This field specifies the type of Service. In this case, the value is "ExternalName", indicating that this Service maps to an external service, not a service inside the Kubernetes cluster.
externalName: This field specifies the location at which that external service can be reached at, in this case, "db-prod.example.com".